#!/usr/bin/env ruby

if (%w( -h --help -help help ) & ARGV).length > 0
  puts "usage: djsd [-hv]"
  puts "starts dotjs server in the foreground. kill with ^C"
  exit
end

if ARGV.include?('-v')
  puts "djsd 1.6"
  exit
end

require 'webrick'

dotjs = Class.new(WEBrick::HTTPServlet::AbstractServlet) do
  def do_GET(request, response)
    body = ''

    if /\.js$/ =~ request.path
      body = build_js(request.path)
      response['Content-Type'] = 'text/javascript'
    elsif /\.css$/ =~ request.path
      body = build_css(request.path)
      response['Content-Type'] = 'text/css'
    end

    if origin = detect_origin(request)
      response['Access-Control-Allow-Origin'] = origin
    end
    response.status = body.empty? ? 204 : 200
    response.body = body
  end

  def build_js(path)
    files = [File.expand_path("default.js")]
    paths = path.gsub('/','').split('.')

    until paths.empty?
      file = File.expand_path(paths.join('.'))
      files << file if File.file?(file)
      paths.shift
    end

    body = "// dotjs is working! //\n"

    files.each do |f|
      body << File.read(f) + ";\n" if File.file?(f)
    end

    body
  end

  def build_css(path)
    files = []
    paths = path.gsub('/','').split('.')

    until paths.empty?
      file = File.expand_path(paths.join('.'))
      files << file if File.file?(file)
      paths.shift
    end

    files << File.expand_path("default.css")

    body = "/* dotjs is working! */\n"

    files.reverse.each do |f|
      body << File.read(f) + "\n" if File.file?(f)
    end

    body
  end

  def detect_origin(req)
    path   = req.path
    origin = req.header['origin']
    search = path.gsub('/','').gsub(/\.(js|css)$/,'') + '$'

    if origin.length == 1 && path.length != 1 && origin[0].match(search)
      origin[0]
    end
  end
end

server = WEBrick::HTTPServer.new(:Port => 3131, :AccessLog => [])
server.mount('/', dotjs)

%w( INT TERM ).each do |sig|
  trap(sig) { server.shutdown }
end

server.start
